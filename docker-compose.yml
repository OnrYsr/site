version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: muse3d_postgres
    environment:
      POSTGRES_DB: muse3dstudio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - muse3d_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d muse3dstudio"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: muse3d_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - muse3d_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: muse3d_app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/muse3dstudio
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-secret-change-in-production
    ports:
      - "3000:3000"
      - "5555:5555" # Prisma Studio
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - muse3d_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: npm start

  # Prisma Studio (Database GUI)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: muse3d_prisma_studio
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/muse3dstudio
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - muse3d_network
    depends_on:
      postgres:
        condition: service_healthy
    command: npx prisma studio --port 5555 --hostname 0.0.0.0
    profiles:
      - tools

  # pgAdmin (PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: muse3d_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@muse3d.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - muse3d_network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - tools

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: muse3d_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - muse3d_network
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  muse3d_network:
    driver: bridge 